package com.august.spiritscribe.ui.evolution.components

import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.material3.TextButton
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.august.spiritscribe.domain.model.EvolutionStage

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun EvolutionGuideDialog(
    onDismiss: () -> Unit,
    modifier: Modifier = Modifier
) {
    AlertDialog(
        onDismissRequest = onDismiss,
        title = {
            Text(
                text = "üß¨ ÌÖåÏù¥Ïä§Ìä∏ ÏßÑÌôî Í∞ÄÏù¥Îìú",
                style = MaterialTheme.typography.headlineSmall,
                fontWeight = FontWeight.Bold
            )
        },
        text = {
            EvolutionGuideContent()
        },
        confirmButton = {
            TextButton(onClick = onDismiss) {
                Text("ÌôïÏù∏")
            }
        },
        modifier = modifier
    )
}

@Composable
private fun EvolutionGuideContent() {
    Column(
        modifier = Modifier
            .verticalScroll(rememberScrollState())
            .fillMaxWidth()
            .padding(vertical = 8.dp),
        verticalArrangement = Arrangement.spacedBy(20.dp)
    ) {
        // ÏÜåÍ∞ú ÏÑπÏÖò
        GuideSection(
            title = "üéØ ÌÖåÏù¥Ïä§Ìä∏ ÏßÑÌôîÎûÄ?",
            content = "ÏúÑÏä§ÌÇ§ ÎÖ∏Ìä∏Î•º Í∏∞Î°ùÌï† ÎïåÎßàÎã§ ÏÑ†ÌÉùÌïòÎäî ÌîåÎ†àÏù¥Î≤ÑÎì§Ïù¥ Î™®Ïó¨ ÎÇòÎßåÏùò Í≥†Ïú†Ìïú 'ÌÖåÏù¥Ïä§Ìä∏ DNA'Î•º ÎßåÎì§Ïñ¥Í∞ëÎãàÎã§. Ïù¥ DNAÎäî ÏãúÍ∞ÑÏù¥ ÏßÄÎÇòÎ©¥ÏÑú ÏßÑÌôîÌïòÎ©∞, Ïó¨Îü¨Î∂ÑÏùò Ï∑®Ìñ• Î∞úÏ†Ñ Í≥ºÏ†ïÏùÑ ÏãúÍ∞ÅÏ†ÅÏúºÎ°ú Î≥¥Ïó¨Ï§çÎãàÎã§."
        )
        
        // ÏßÑÌôî Îã®Í≥Ñ ÏÑ§Î™Ö
        EvolutionStagesGuide()
        
        // DNA ÏãúÍ∞ÅÌôî ÏÑ§Î™Ö
        GuideSection(
            title = "üß¨ DNA ÏãúÍ∞ÅÌôî",
            content = "Ï§ëÏïôÏùò ÌöåÏ†ÑÌïòÎäî Ïù¥Ï§ë ÎÇòÏÑ† Íµ¨Ï°∞Í∞Ä Î∞îÎ°ú Ïó¨Îü¨Î∂ÑÏùò ÌÖåÏù¥Ïä§Ìä∏ DNAÏûÖÎãàÎã§. Í∞Å ÎÖ∏ÎìúÎäî ÏÑ†ÌÉùÌïú ÌîåÎ†àÏù¥Î≤ÑÎ•º ÎÇòÌÉÄÎÇ¥Î©∞, ÌÅ¨Í∏∞ÏôÄ ÏÉâÏÉÅÏù¥ ÌîåÎ†àÏù¥Î≤ÑÏùò ÏßÑÌôî Ï†ïÎèÑÎ•º Î≥¥Ïó¨Ï§çÎãàÎã§."
        )
        
        // ÏÑ±Í≤© Ïú†Ìòï ÏÑ§Î™Ö
        GuideSection(
            title = "üé≠ ÌÖåÏù¥Ïä§Ìä∏ ÌéòÎ•¥ÏÜåÎÇò",
            content = "Ïó¨Îü¨Î∂ÑÏùò ÌîåÎ†àÏù¥Î≤Ñ ÏÑ†ÌÉù Ìå®ÌÑ¥ÏùÑ Î∂ÑÏÑùÌïòÏó¨ 6Í∞ÄÏßÄ ÌÖåÏù¥Ïä§Ìä∏ ÏÑ±Í≤© Ï§ë ÌïòÎÇòÎ°ú Î∂ÑÎ•òÌï©ÎãàÎã§. ÌÅ¥ÎûòÏãù Í∞êÏãùÍ∞ÄÎ∂ÄÌÑ∞ Î™®ÌóòÏ†Å ÌÉêÌóòÍ∞ÄÍπåÏßÄ, ÎÇòÎßåÏùò Í≥†Ïú†Ìïú ÌÖåÏù¥Ïä§Ìä∏ ÏÑ±Í≤©ÏùÑ Î∞úÍ≤¨Ìï¥Î≥¥ÏÑ∏Ïöî."
        )
        
        // ÏßÑÌôî Ìè¨Ïù∏Ìä∏ ÏÑ§Î™Ö
        GuideSection(
            title = "‚≠ê ÏßÑÌôî Ìè¨Ïù∏Ìä∏",
            content = "ÌäπÎ≥ÑÌïú ÏàúÍ∞ÑÎì§ÏùÑ Í∏∞Î°ùÌï©ÎãàÎã§. Ï≤´ Î≤àÏß∏ ÎÖ∏Ìä∏, ÏÉàÎ°úÏö¥ ÌîåÎ†àÏù¥Î≤Ñ Î∞úÍ≤¨, ÎßàÏùºÏä§ÌÜ§ Îã¨ÏÑ± Îì± Ïó¨Îü¨Î∂ÑÏùò ÌÖåÏù¥Ïä§Ìä∏ Ïó¨Ï†ïÏóêÏÑú Ï§ëÏöîÌïú ÏàúÍ∞ÑÎì§Ïù¥ ÏßÑÌôî Ìè¨Ïù∏Ìä∏Î°ú Ï†ÄÏû•Îê©ÎãàÎã§."
        )
        
        // ÌåÅ ÏÑπÏÖò
        GuideSection(
            title = "üí° ÏßÑÌôî ÌåÅ",
            content = "‚Ä¢ Îã§ÏñëÌïú ÏúÑÏä§ÌÇ§Î•º ÏãúÎèÑÌï¥Î≥¥ÏÑ∏Ïöî\n‚Ä¢ ÏÉàÎ°úÏö¥ ÌîåÎ†àÏù¥Î≤ÑÎ•º Ï†ÅÍ∑π ÌÉêÍµ¨ÌïòÏÑ∏Ïöî\n‚Ä¢ Íæ∏Ï§ÄÌûà ÎÖ∏Ìä∏Î•º ÏûëÏÑ±ÌïòÏÑ∏Ïöî\n‚Ä¢ ÏûêÏã†ÎßåÏùò Ï∑®Ìñ•ÏùÑ ÎØøÍ≥† Î∞úÏ†ÑÏãúÌÇ§ÏÑ∏Ïöî"
        )
        
        // ÎßàÎ¨¥Î¶¨
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(
                containerColor = MaterialTheme.colorScheme.primaryContainer
            )
        ) {
            Text(
                text = "üåü \"Distill Your Taste\" - Í∏∞Î°ùÏúºÎ°ú Ï∑®Ìñ•ÏùÑ Ï¶ùÎ•òÌïòÏó¨ ÎÇòÎßåÏùò ÏôÑÏÑ±Îêú ÌÖåÏù¥Ïä§Ìä∏ ÌîÑÎ°úÌååÏùºÏùÑ ÎßåÎì§Ïñ¥Í∞ÄÏÑ∏Ïöî!",
                style = MaterialTheme.typography.bodyMedium,
                fontWeight = FontWeight.Medium,
                color = MaterialTheme.colorScheme.onPrimaryContainer,
                modifier = Modifier.padding(16.dp),
                textAlign = TextAlign.Center
            )
        }
    }
}

@Composable
private fun EvolutionStagesGuide() {
    Column(
        verticalArrangement = Arrangement.spacedBy(12.dp)
    ) {
        Text(
            text = "ü¶ã ÏßÑÌôî Îã®Í≥Ñ",
            style = MaterialTheme.typography.titleMedium,
            fontWeight = FontWeight.Bold,
            color = MaterialTheme.colorScheme.primary
        )
        
        Text(
            text = "ÌÖåÏù¥Ïä§Ìä∏ Ïó¨Ï†ïÏùÄ 4Îã®Í≥ÑÎ°ú ÎÇòÎâ©ÎãàÎã§:",
            style = MaterialTheme.typography.bodyMedium
        )
        
        // Í∞Å ÏßÑÌôî Îã®Í≥Ñ ÏÑ§Î™Ö
        EvolutionStage.values().forEach { stage ->
            EvolutionStageItem(stage = stage)
        }
    }
}

@Composable
private fun EvolutionStageItem(stage: EvolutionStage) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(
            containerColor = when (stage) {
                EvolutionStage.EGG -> Color(0xFFFFE0B2).copy(alpha = 0.3f)
                EvolutionStage.LARVA -> Color(0xFFC8E6C9).copy(alpha = 0.3f)
                EvolutionStage.PUPA -> Color(0xFFBBDEFB).copy(alpha = 0.3f)
                EvolutionStage.BUTTERFLY -> Color(0xFFE1BEE7).copy(alpha = 0.3f)
            }
        )
    ) {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(12.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(
                text = stage.emoji,
                style = MaterialTheme.typography.titleLarge,
                modifier = Modifier.padding(end = 12.dp)
            )
            
            Column {
                Text(
                    text = stage.displayName,
                    style = MaterialTheme.typography.titleSmall,
                    fontWeight = FontWeight.Bold
                )
                Text(
                    text = stage.description,
                    style = MaterialTheme.typography.bodySmall,
                    color = MaterialTheme.colorScheme.onSurfaceVariant
                )
                Text(
                    text = "ÌïÑÏöî Ï°∞Í±¥: ${stage.requiredNotes}Í∞ú Ïù¥ÏÉÅÏùò ÎÖ∏Ìä∏",
                    style = MaterialTheme.typography.bodySmall,
                    color = MaterialTheme.colorScheme.primary,
                    fontWeight = FontWeight.Medium
                )
            }
        }
    }
}

@Composable
private fun GuideSection(
    title: String,
    content: String,
    modifier: Modifier = Modifier
) {
    Column(
        modifier = modifier,
        verticalArrangement = Arrangement.spacedBy(8.dp)
    ) {
        Text(
            text = title,
            style = MaterialTheme.typography.titleMedium,
            fontWeight = FontWeight.Bold,
            color = MaterialTheme.colorScheme.primary
        )
        Text(
            text = content,
            style = MaterialTheme.typography.bodyMedium,
            color = MaterialTheme.colorScheme.onSurface
        )
    }
}
